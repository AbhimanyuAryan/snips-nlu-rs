apply plugin: 'kotlin'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'net.java.dev.jna:jna:4.3.0'
}

task(copySoFileForJar, type: Copy) {
    from(file("/home/fredszaq/Work/snips-queries-rust/target/release/libqueries_embed.so"))
    into(new File(buildDir, "jniLibs/linux-${System.getProperty("os.arch")}"))
}

sourceSets {
    main {
        resources {
            srcDir new File(buildDir, "jniLibs")
            include "*/*.so"
        }
    }
}

processResources.dependsOn(copySoFileForJar)

def aarDir = new File(buildDir, "aar")

task(classesJarForAar, type: Zip) {
    destinationDir aarDir
    archiveName "classes.jar"
    from new File(buildDir, "classes/main")
}

classesJarForAar.dependsOn(classes)

task(manifestForAar, type: Copy) {
    from new File("src/main/android/AndroidManifest.xml")
    destinationDir aarDir
}

task(copySoFileForAar, type: Copy) {
    from(file("/home/fredszaq/Work/snips-queries-rust/target/arm-linux-androideabi/release/libqueries_embed.so"))
    into(new File(aarDir, "jni/armeabi-v7a"))
}

task(aar, type: Zip) {
    destinationDir new File(buildDir, "libs")
    archiveName "${project.name}.aar"
    from aarDir
}

aar.dependsOn(classesJarForAar)
aar.dependsOn(manifestForAar)
aar.dependsOn(copySoFileForAar)

sourceCompatibility = "1.7"
targetCompatibility = "1.7"
